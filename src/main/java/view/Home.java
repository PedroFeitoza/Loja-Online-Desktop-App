/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.ProductController;
import javax.swing.*;
import javax.swing.table.TableCellEditor;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.IOException;
import java.util.List;
import javax.imageio.ImageIO;
import static javax.swing.SwingConstants.CENTER;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableRowSorter;
import model.Product;

/**
 *
 * @author Pedro_Lindao
 */
public class Home extends javax.swing.JFrame {

    private List<Product> produtos;// Lista para armazenar os produtos

    public Home() {
        initComponents();
        DefaultTableModel modelo = (DefaultTableModel) jTableProduct.getModel();
        jTableProduct.setRowSorter(new TableRowSorter(modelo));

        // Define o renderer e editor da coluna de ação
        jTableProduct.getColumnModel().getColumn(1).setCellRenderer(new ImageRenderer()); // Coluna de logo
        jTableProduct.getColumnModel().getColumn(5).setCellRenderer(new ButtonRenderer());
        jTableProduct.getColumnModel().getColumn(5).setCellEditor(new ButtonEditor());

        readJTable();
    }

    // Renderer para exibir imagens na coluna da tabela
    private static class ImageRenderer extends JLabel implements TableCellRenderer {
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,
                int row, int column) {
            // Caminho relativo para a pasta resources
            String imagePath = "/images/" + value;

            // Obtém o recurso de dentro de resources
            ImageIcon icon = new ImageIcon(getClass().getResource(imagePath));

            // Ajuste a imagem para caber na célula
            Image scaledImage = icon.getImage().getScaledInstance(80, 80, Image.SCALE_SMOOTH);
            setIcon(new ImageIcon(scaledImage));
            setHorizontalAlignment(CENTER);

            return this;
        }
    }

    private void readJTable() {
        DefaultTableModel modelo = (DefaultTableModel) jTableProduct.getModel();
        modelo.setNumRows(0);
        ProductController pdao = new ProductController();

        produtos = pdao.GetAll();

        for (Product p : produtos) {
            modelo.addRow(new Object[] {
                    p.getId(),
                    p.getImagePath(),
                    p.getName(),
                    p.getDescription(),
                    p.getPrice(),
                    "Ações"
            });
        }
    }

    // Método para obter o produto da linha
    private Product getProductAtRow(int row) {
        return produtos.get(row);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnl_home = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableProduct = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        txtFieldSearch = new javax.swing.JTextField();
        jTabbedPane3 = new javax.swing.JTabbedPane();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("jLabel1");

        jTextField1.setText("jTextField1");

        jButton1.setText("jButton1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jButton1)))
                .addContainerGap(190, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jButton1)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("STEAM VERDE");
        setMaximumSize(new java.awt.Dimension(1280, 720));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setResizable(false);

        pnl_home.setMaximumSize(new java.awt.Dimension(1280, 720));
        pnl_home.setMinimumSize(new java.awt.Dimension(1280, 720));
        pnl_home.setPreferredSize(new java.awt.Dimension(1280, 720));

        jTableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Logo", "Nome", "Descrição", "Valor", "Ação"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableProduct.setRowHeight(100);
        jScrollPane1.setViewportView(jTableProduct);

        jToolBar1.setRollover(true);

        jButton2.setText("admin");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(jButton2);

        txtFieldSearch.setToolTipText("Procure por um nome de jogo");
        txtFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFieldSearchKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnl_homeLayout = new javax.swing.GroupLayout(pnl_home);
        pnl_home.setLayout(pnl_homeLayout);
        pnl_homeLayout.setHorizontalGroup(
            pnl_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pnl_homeLayout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(pnl_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnl_homeLayout.createSequentialGroup()
                        .addComponent(txtFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 664, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnl_homeLayout.setVerticalGroup(
            pnl_homeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_homeLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(txtFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(101, 101, 101))
        );

        jTabbedPane1.addTab("Loja", pnl_home);
        jTabbedPane1.addTab("Cart", jTabbedPane3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1793, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFieldSearchKeyReleased
        ProductController pdao = new ProductController();
        DefaultTableModel modelo = (DefaultTableModel) jTableProduct.getModel();
        modelo.setNumRows(0);
        produtos = pdao.GetByName(txtFieldSearch.getText());

        for (Product p : produtos) {
            modelo.addRow(new Object[] {
                    p.getId(),
                    p.getImagePath(),
                    p.getName(),
                    p.getDescription(),
                    p.getPrice(),
                    "Ações"
            });
        }
    }//GEN-LAST:event_txtFieldSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    private static class ButtonRenderer extends JPanel implements TableCellRenderer {

        private final JButton btnCompra = new JButton("Comprar");
        private final JButton btnCarrinho = new JButton("Carrinho");

        public ButtonRenderer() {
            setLayout(new FlowLayout(FlowLayout.CENTER));
            add(btnCompra);
            add(btnCarrinho);
        }

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus,
                int row, int column) {
            return this;
        }
    }

    private class ButtonEditor extends AbstractCellEditor implements TableCellEditor {

        private final JPanel panel = new JPanel();
        private final JButton btnCompra = new JButton("Comprar");
        private final JButton btnCarrinho = new JButton("Carrinho");

        public ButtonEditor() {
            panel.setLayout(new FlowLayout(FlowLayout.CENTER));
            panel.add(btnCompra);
            panel.add(btnCarrinho);

            // Configura os eventos de ação dos botões
            btnCompra.addActionListener((ActionEvent e) -> {
                int row = jTableProduct.getSelectedRow();
                Product produto = getProductAtRow(row); // Obter o produto
                JOptionPane.showMessageDialog(panel, "Comprando: " + produto.getName());
                stopCellEditing();
            });

            btnCarrinho.addActionListener((ActionEvent e) -> {
                int row = jTableProduct.getSelectedRow();
                Product produto = getProductAtRow(row); // Obter o produto
                JOptionPane.showMessageDialog(panel, "Adicionado ao carrinho: " + produto.getName());
                stopCellEditing();
            });
        }

        @Override
        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row,
                int column) {
            return panel;
        }

        @Override
        public Object getCellEditorValue() {
            return null;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTable jTableProduct;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnl_home;
    private javax.swing.JTextField txtFieldSearch;
    // End of variables declaration//GEN-END:variables
}
